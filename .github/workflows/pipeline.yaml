name: Lint Code, Build, Test and Publish

on:
    push:
        branches: [main, dev]
    pull_request:
        branches: [main, dev]

jobs:
    run_linter:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Lint code
              uses: github/super-linter@v5
              env:
                  VALIDATE_ALL_CODEBASE: false
                  DEFAULT_BRANCH: main
                  VALIDATE_CSHARP: true
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DISABLE_ERRORS: true

    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup .NET Core SDK
              uses: actions/setup-dotnet@v2
              with:
                  dotnet-version: "7.0.x"

            - name: Restore Dependencies
              run: dotnet restore "./CommentAPI/CommentAPI.csproj"

            - name: Restore Test Dependencies
              run: dotnet restore "./CommentAPITests/CommentAPITests.csproj"

            - name: Restore NuGet Packages
              run: dotnet restore

            - name: Build
              run: dotnet build --configuration Release --no-restore

            - name: Publish Build Artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: built-app
                  path: |
                      CommentAPI/bin/Release/net7.0/
                      CommentAPITests/bin/Release/net7.0/

    test:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup .NET Core SDK
          uses: actions/setup-dotnet@v2
          with:
            dotnet-version: "7.0.x"

        - name: Download Build Artifacts
          uses: actions/download-artifact@v3
          with:
            name: built-app
            path: .

        - name: Test and Collect Coverage
          run: dotnet test ./CommentAPITests/CommentAPITests.csproj --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
                  
        - name: Print Current Working Directory
          run: |
            echo "***"
            ls /home/runner/work/CommentAPI/CommentAPI/CommentAPITests/ 
  
        - name: Upload Coverage Report as Artifact
          uses: actions/upload-artifact@v3
          with:
            name: code-coverage
            path: ./CommentAPITests/TestResults/**/coverage.opencover.xml
          
    publish_to_dockerhub:
        needs: [test]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Publish - Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./CommentAPI/Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/comment_api:main
                  
    sonarcloud_analysis:
      needs: test
      runs-on: windows-latest
      steps:
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: 'zulu'
    
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Download Code Coverage Results
          uses: actions/download-artifact@v3
          with:
            name: code-coverage
            path: coverage-report
          
        - name: List contents of the directory
          run: |
            echo "Listing contents of the downloaded artifacts directory:"
            ls 
            echo "***"
            ls CommentAPITests

        - name: Print the contents of the coverage report
          run: |
            echo "Printing the contents of coverage.cobertura.xml:"
            cat ./coverage.cobertura.xml || echo "Coverage file not found."
          shell: bash


        - name: Install SonarScanner
          run: |
            dotnet tool install --global dotnet-sonarscanner
            echo "Adding .NET global tools to PATH..."
            echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
    
        - name: Begin SonarCloud Scan
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            dotnet sonarscanner begin /k:"OlivierMantz_CommentAPI" /o:"oliviermantz" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="coverage-report/coverage.opencover.xml" /d:sonar.exclusions="**/Migrations/*.cs,**/*.js,**/*.css" /d:sonar.verbose=true
              
        - name: Restore NuGet packages
          run: dotnet restore  

        - name: Build
          run: dotnet build --configuration Release --no-restore
    
        - name: End SonarCloud Scan
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"